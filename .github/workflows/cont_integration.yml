on: [push, pull_request]

name: CI

jobs:

  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.65.0 # STABLE
          - 1.57.0 # MSRV
        features:
          - default
          - electrum,sqlite-db
          - electrum,key-value-db
          - electrum
          - esplora-ureq,sqlite-db
          - esplora-reqwest,sqlite-db
          - compiler,sqlite-db
          #- compact_filters,sqlite-db # Compact Filters temporarily disabled
          - rpc,sqlite-db
          - reserves,electrum,sqlite-db
          - electrum,verify,sqlite-db
          # regtest-* features are experimental and not fully usable
          - regtest-bitcoin,sqlite-db
          - regtest-electrum,sqlite-db

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate cache key
        run: echo "${{ matrix.rust }} ${{ matrix.features }}" | tee .cache_key
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('.cache_key') }}-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rustfmt, clippy
      - name: Build
        run: cargo build --no-default-features --features repl,${{ matrix.features }} --locked
      - name: Clippy
        run: cargo clippy -- -D warnings
      - name: Test
        run: cargo test --no-default-features --features repl,${{ matrix.features }}

  wasm-build:
    name: Build WASM
    runs-on: ubuntu-latest
    env:
      CC: clang-10
      CFLAGS: -I/usr/include
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate cache key
        run: echo "Build WASM" | tee .cache_key
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('.cache_key') }}-${{ hashFiles('**/Cargo.toml','**/Cargo.lock') }}
        # Install a recent version of clang that supports wasm32
      - run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - || exit 1
      - run: sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main" || exit 1
      - run: sudo apt-get update || exit 1
      - run: sudo apt-get install -y libclang-common-10-dev clang-10 libc6-dev-i386 || exit 1
      - name: Set default toolchain
        run: rustup default 1.57.0 # MSRV
      - name: Set profile
        run: rustup set profile minimal
      - name: Add target wasm32
        run: rustup target add wasm32-unknown-unknown
      - name: Update toolchain
        run: rustup update
      - name: Build
        run: cargo build --target wasm32-unknown-unknown --no-default-features --features esplora-reqwest,async-interface,compiler,dev-getrandom-wasm

  fmt:
    name: Rust fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy
      - name: Check fmt
        run: cargo fmt --all -- --check
